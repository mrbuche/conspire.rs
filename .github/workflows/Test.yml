name: Test
on:
  pull_request:
    branches: main
env:
  CARGO_TERM_COLOR: always
jobs:
  Checks:
    strategy:
      fail-fast: false
      matrix:
        features: [math, mechanics, constitutive, fem]
        os: [macos-latest, windows-latest, ubuntu-latest]
        toolchain:
          - beta
          - nightly
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy, rustfmt
          default: true
          toolchain: ${{ matrix.toolchain }}
      - name: Format
        run: cargo fmt --all -- --check
      - name: Lint
        run: cargo clippy --release --features ${{ matrix.features }} -- -D warnings
      - name: Lint tests
        run: cargo clippy --release --features ${{ matrix.features }} --tests -- -D warnings
      - name: Test
        run: cargo test --release --features ${{ matrix.features }}
      - name: Tree
        if: matrix.os == 'ubuntu-latest'
        run: $([[ $(cargo tree --color always --edges normal --features ${{ matrix.features }} | wc -l) -eq 1 ]])
  Coverage:
    strategy:
      fail-fast: false
      matrix:
        features: [math, mechanics, constitutive, fem]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: taiki-e/install-action@cargo-llvm-cov
      - name: LLVM-cov
        run: rustup run nightly cargo llvm-cov --profile release --features ${{ matrix.features }} --cobertura --output-path coverage_${{ matrix.features }}.xml
      - name: Report
        uses: insightsengineering/coverage-action@v2
        with:
          coverage-summary-title: "Coverage (${{ matrix.features }})"
          fail: false
          path: coverage_${{ matrix.features }}.xml
          publish: true
